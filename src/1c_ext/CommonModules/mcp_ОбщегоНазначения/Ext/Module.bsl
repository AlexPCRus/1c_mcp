// Репозиторий проекта: 
// https://github.com/vladimir-kharin/1c_formatter
// 
// Харин Владимир (С) 2025. https://vharin.ru
// Telegram - https://t.me/vladimir_kharin

#Область ПрограммныйИнтерфейс

// Преобразует строку в формате JSON в структуру.
// 
// Параметры:
//  СтрокаJSON - Строка - строка в формате JSON.
// 
// Возвращаемое значение:
//  Структура -
Функция JSONВСтруктуру(СтрокаJSON) Экспорт
	// Выделяем в строке JSON часть именно JSON	
	// Находим позицию первого открывающего фигурного скобки
	ПозицияНачала = СтрНайти(СтрокаJSON, "{");
	Если ПозицияНачала = 0 Тогда
		// Если не найдено, возвращаем Неопределено или можно вызвать ошибку
		Возврат Неопределено;
	КонецЕсли;
	
	// Находим позицию последнего закрывающего фигурного скобки, используя поиск с конца
	ПозицияКонца = СтрНайти(СтрокаJSON, "}", НаправлениеПоиска.СКонца);
	Если ПозицияКонца = 0 Тогда
		// Если закрывающая скобка не найдена, возвращаем Неопределено
		Возврат Неопределено;
	КонецЕсли;
	
	// Вычисляем длину фрагмента с JSON: от первого "{" до последнего "}" включительно
	ДлинаФрагмента = ПозицияКонца - ПозицияНачала + 1;
	
	// Извлекаем корректную часть JSON из строки
	ЧистыйJSON = Сред(СтрокаJSON, ПозицияНачала, ДлинаФрагмента);
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ЧистыйJSON);
	
	Результат = ПрочитатьJSON(ЧтениеJSON);
	
	ЧтениеJSON.Закрыть();
	
	Возврат Результат;
КонецФункции

// Разбирает URL на составляющие: схема, хост, порт и путь
// 
// Параметры:
//  URL - Строка - URL для разбора
// 
// Возвращаемое значение:
//  Структура - Разобранные части URL (схема, хост, порт, путь)
Функция РазобратьURL(Знач URL) Экспорт
	РезультатРазбора = Новый Структура("Схема, Хост, Порт, Путь");
	    
	    // Проверка и удаление протокола
	    Если НРег(Лев(URL, 8)) = "https://" Тогда
	        РезультатРазбора.Схема = "https";
	        URL = Сред(URL, 9);
	    ИначеЕсли НРег(Лев(URL, 7)) = "http://" Тогда
	        РезультатРазбора.Схема = "http";
	        URL = Сред(URL, 8);
	    Иначе
	        ВызватьИсключение "Неверный формат URL: отсутствует протокол http или https";
	    КонецЕсли;
	    
	    // Разделение хоста, порта и пути
	    ПозицияСлеш = СтрНайти(URL, "/");
	    Если ПозицияСлеш > 0 Тогда
	        ХостИПорт = Лев(URL, ПозицияСлеш - 1);
	        РезультатРазбора.Путь = Сред(URL, ПозицияСлеш);
	    Иначе
	        ХостИПорт = URL;
	        РезультатРазбора.Путь = "/";
	    КонецЕсли;
	    
	    // Разделение хоста и порта
	    ПозицияДвоеточие = СтрНайти(ХостИПорт, ":");
	    Если ПозицияДвоеточие > 0 Тогда
	        РезультатРазбора.Хост = Лев(ХостИПорт, ПозицияДвоеточие - 1);
	        РезультатРазбора.Порт = Число(Сред(ХостИПорт, ПозицияДвоеточие + 1));
	    Иначе
	        РезультатРазбора.Хост = ХостИПорт;
	        РезультатРазбора.Порт = ?(РезультатРазбора.Схема = "https", 443, 80);
	    КонецЕсли;
	    
	    Возврат РезультатРазбора;
КонецФункции

// Преобразует структура в строку JSON
// 
// Параметры:
//  Объект - Структура - которую необходимо преобразовать в строку JSON.
// 
// Возвращаемое значение:
//  Строка - в формате JSON.
Функция СтруктураВJSON(Объект) Экспорт
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Объект);
	
	Возврат ЗаписьJSON.Закрыть();
КонецФункции

#КонецОбласти

