"""–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ .env —Ñ–∞–π–ª–∞."""

import subprocess
import sys
import os
from pathlib import Path


def test_cli_args():
	"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏."""
	
	print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏")
	print("=" * 60)
	
	# –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –Ω–µ—Ç .env —Ñ–∞–π–ª–∞ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
	env_file = Path(".env")
	env_backup = None
	if env_file.exists():
		env_backup = env_file.read_text()
		env_file.unlink()
		print("üìÅ –í—Ä–µ–º–µ–Ω–Ω–æ —É–¥–∞–ª–µ–Ω .env —Ñ–∞–π–ª –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞")
	
	# –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è MCP_*
	mcp_vars = [key for key in os.environ.keys() if key.startswith("MCP_")]
	saved_vars = {}
	for var in mcp_vars:
		saved_vars[var] = os.environ[var]
		del os.environ[var]
	
	print("üßπ –û—á–∏—â–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è MCP_*")
	
	try:
		# –¢–µ—Å—Ç 1: –¢–æ–ª—å–∫–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
		print("\nüìã –¢–µ—Å—Ç 1: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
		cmd = [
			sys.executable, "-m", "src.py_server", "stdio",
			"--onec-url", "http://localhost/test_base",
			"--onec-username", "test_user", 
			"--onec-password", "test_password"
		]
		
		print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
		
		# –ó–∞–ø—É—Å–∫–∞–µ–º —Å —Ç–∞–π–º–∞—É—Ç–æ–º, —Ç–∞–∫ –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ 1–°
		try:
			result = subprocess.run(
				cmd, 
				capture_output=True, 
				text=True, 
				timeout=5,
				cwd=Path.cwd()
			)
		except subprocess.TimeoutExpired:
			print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É)")
			print("   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
		except Exception as e:
			print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
		
		# –¢–µ—Å—Ç 2: –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
		print("\nüìã –¢–µ—Å—Ç 2: –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ CLI")
		cmd = [
			sys.executable, "-m", "src.py_server", "http",
			"--onec-url", "http://server:8080/erp_base",
			"--onec-username", "admin",
			"--onec-password", "secret123",
			"--onec-service-root", "custom_mcp",
			"--host", "0.0.0.0",
			"--port", "9000",
			"--log-level", "DEBUG"
		]
		
		print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
		
		try:
			result = subprocess.run(
				cmd,
				capture_output=True,
				text=True,
				timeout=5,
				cwd=Path.cwd()
			)
		except subprocess.TimeoutExpired:
			print("‚úÖ HTTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É)")
			print("   –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
		except Exception as e:
			print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
		
		# –¢–µ—Å—Ç 3: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
		print("\nüìã –¢–µ—Å—Ç 3: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞)")
		cmd = [
			sys.executable, "-m", "src.py_server", "stdio",
			"--onec-url", "http://localhost/test_base",
			# –ù–∞–º–µ—Ä–µ–Ω–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º username –∏ password
		]
		
		print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
		
		try:
			result = subprocess.run(
				cmd,
				capture_output=True,
				text=True,
				timeout=5,
				cwd=Path.cwd()
			)
			
			if result.returncode != 0:
				print("‚úÖ –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
				print(f"   {result.stderr.strip()}")
			else:
				print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
				
		except subprocess.TimeoutExpired:
			print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
		except Exception as e:
			print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
	
	finally:
		# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
		for var, value in saved_vars.items():
			os.environ[var] = value
		
		# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º .env —Ñ–∞–π–ª
		if env_backup:
			env_file.write_text(env_backup)
			print("\nüìÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω .env —Ñ–∞–π–ª")
		
		print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
	test_cli_args() 